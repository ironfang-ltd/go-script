<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="5ec5e50f-a3a7-4048-8fb5-181cf2f38085" name="Changes" comment="parser tests">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evaluator/evaluator.go" beforeDir="false" afterPath="$PROJECT_DIR$/evaluator/evaluator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/evaluator/evaluator_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/evaluator/evaluator_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/parser/parser.go" beforeDir="false" afterPath="$PROJECT_DIR$/parser/parser.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="0" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2pzj7THBs4JfE0pc9IYlsnFXP8o" />
  <component name="ProjectLevelVcsManager">
    <OptionsSetting value="false" id="Update" />
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "DefaultGoTemplateProperty": "Go File",
    "Go Build.go build github.com/ironfang-ltd/ironscript.executor": "Coverage",
    "Go Build.go build main.go.executor": "Run",
    "Go Test.TestEvaluateFnLiteral in github.com/ironfang-ltd/ironscript/evaluator.executor": "Debug",
    "Go Test.TestEvaluateReturn in github.com/ironfang-ltd/ironscript/evaluator.executor": "Run",
    "Go Test.TestLineAndColumn in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestLineAndColumnScript in github.com/ironfang-ltd/ironscript/lexer.executor": "Coverage",
    "Go Test.TestLineAndColumnTemplate in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestParseCallExpression in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseExpressionStatement in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseFunctionLiteral in github.com/ironfang-ltd/ironscript/parser.executor": "Debug",
    "Go Test.TestParseIdentifier in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseIfElseExpression in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseIfExpression in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseLetStatement in github.com/ironfang-ltd/ironscript/parser.executor": "Debug",
    "Go Test.TestParseReturnStatement in github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.TestParseScriptTokens in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestParseStringWithEscaped in github.com/ironfang-ltd/ironscript/lexer.executor": "Debug",
    "Go Test.TestParseStringWithMissingEnd in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestParseStringWithNewLine in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestTemplate in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestTemplateLineAndColumnWithFull in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.TestTemplateLineAndColumnWithWhitespace in github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.go test github.com/ironfang-ltd/ironscript/lexer.executor": "Run",
    "Go Test.go test github.com/ironfang-ltd/ironscript/parser.executor": "Run",
    "Go Test.go test ironscript.executor": "Coverage",
    "Go Test.go test lexer.executor": "Coverage",
    "Go Test.lexer_test.go.executor": "Coverage",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.git.unshallow": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "git-widget-placeholder": "main",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/home/richard/Projects/github.com/ironfang-ltd/ironcms",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/lexer" />
    </key>
  </component>
  <component name="RunManager" selected="Go Test.TestEvaluateFnLiteral in github.com/ironfang-ltd/ironscript/evaluator">
    <configuration name="TestEvaluateFnLiteral in github.com/ironfang-ltd/ironscript/evaluator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ironscript" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ironfang-ltd/ironscript/evaluator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestEvaluateFnLiteral\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestEvaluateReturn in github.com/ironfang-ltd/ironscript/evaluator" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ironscript" />
      <working_directory value="$PROJECT_DIR$/evaluator" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ironfang-ltd/ironscript/evaluator" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestEvaluateReturn\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseFunctionLiteral in github.com/ironfang-ltd/ironscript/parser" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ironscript" />
      <working_directory value="$PROJECT_DIR$/parser" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ironfang-ltd/ironscript/parser" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseFunctionLiteral\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestParseIfElseExpression in github.com/ironfang-ltd/ironscript/parser" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ironscript" />
      <working_directory value="$PROJECT_DIR$/parser" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ironfang-ltd/ironscript/parser" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestParseIfElseExpression\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/ironfang-ltd/ironscript/parser" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="ironscript" />
      <working_directory value="$PROJECT_DIR$/parser" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/ironfang-ltd/ironscript/parser" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestEvaluateFnLiteral in github.com/ironfang-ltd/ironscript/evaluator" />
        <item itemvalue="Go Test.TestParseFunctionLiteral in github.com/ironfang-ltd/ironscript/parser" />
        <item itemvalue="Go Test.TestEvaluateReturn in github.com/ironfang-ltd/ironscript/evaluator" />
        <item itemvalue="Go Test.TestParseIfElseExpression in github.com/ironfang-ltd/ironscript/parser" />
        <item itemvalue="Go Test.go test github.com/ironfang-ltd/ironscript/parser" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-5df93f7ad4aa-df9ad98b711f-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-242.21829.220" />
        <option value="bundled-js-predefined-d6986cc7102b-7c0b70fcd90d-JavaScript-GO-242.21829.220" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="foreach/script statements" />
    <MESSAGE value="parser tests" />
    <option name="LAST_COMMIT_MESSAGE" value="parser tests" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/evaluator/evaluator_test.go</url>
          <line>51</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/ironscript$go_test_github_com_ironfang_ltd_ironscript_lexer.out" NAME="go test github.com/ironfang-ltd/ironscript/lexer Coverage Results" MODIFIED="1733795097774" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$go_test_lexer.out" NAME="go test lexer Coverage Results" MODIFIED="1733792897553" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$go_test_ironscript.out" NAME="go test ironscript Coverage Results" MODIFIED="1733796439416" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$TestLineAndColumnScript_in_github_com_ironfang_ltd_ironscript_lexer.out" NAME="TestLineAndColumnScript in github.com/ironfang-ltd/ironscript/lexer Coverage Results" MODIFIED="1733792861828" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$lexer_test_go.out" NAME="lexer_test.go Coverage Results" MODIFIED="1733795272472" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$go_test_github_com_ironfang_ltd_ironscript_parser.out" NAME="go test github.com/ironfang-ltd/ironscript/parser Coverage Results" MODIFIED="1733796605437" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/ironscript$go_build_github_com_ironfang_ltd_ironscript.out" NAME="go build github.com/ironfang-ltd/ironscript Coverage Results" MODIFIED="1733796470133" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>